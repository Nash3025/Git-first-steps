git init
	inicializar un nuevo repositorio
git add namefile
	añadir un nuevo fichero al repositorio
git commit -m "vesionName"
	manda los cambios al stage (base de datos)
git add .
	añade todos los archivos que han cambiado
git status
	revisar los cambios que se han realizado
git show
	mostrar todos los cambios históricos hechos
git log nameFile
	revisar el historial de cambios de un archivo
git log --all --graph --decorate --oneline
	mostrar de una manera mas ordenada los logs
git push
	mandar a un servidor remoto
git pull 
	recibir de un repositorio remoto
git rm --cached nameFile
	eliminar archivo del stage y de la memoria ram
git rm nameFile
	borra archivo del stage

git config
	mostrar la configuracion de git
git config --list
	modificar la configuracion de git
git config --list --show-origin
	mostrar la ubicacion de los archivos de configuracion
git config --global user.name "userName"
	configuracion para todos los usuarios
git config --global user.email "mailName@gg.c"

git diff commit1 commit2
	mostrar diferencia de los cambios entre las dos versiones

+ramas
	development rama de desarrollo
	feature rama de nuevas características
	hot fix rama de solución bugs
git cheockout idCommit|branch nameFile

git reset idCommit --hard|soft
	restablece git a un punto determinado, hard aplica los cambios soft deja los cambios en stage

git rm --cached|force nameFile
	elmina los archivos del stage (cached) y de la base de git (force)

git log --stat
	mostrar estadisticas de cambios en el repositorio

+repositorio remoto
git clone url
	copia del master al directorio de trabajo y una copia del repositorio
git push url
	envía las modificaciones al repositorio remoto
git fetch
	descarga las modificaciones al repositorio local
git merge
	combina los cambios del repositorio local y los realizados
git pull
	combinacion de git fetch y git merge

git branch branchName
	crea una nueva rama
git cheockout branchName
	redirige a la nueva rama
git merge branchName
	combina la rama donde esta el HEAD con branchName, continua en la rama del HEAD
------
github
git remote add origin url
	añadir la direccion del repositorio
git push origin main
git pull origin main --allow-unrelated-histories
	permitir realizar un merge con repositorios de origenes diferentes
---------
Confiruracion ssh
	ssh-keygen -t rsa -b 4096 -C "email"
		generación de llave ssh
	eval $(ssh-agent -s)
		comprobar que el proceso ssh esté corriendo
	ssh-add ~/.ssh/id_rsa
		añadir nuestra llave creada
	git remote set-url remoteName sshURL
		cambiar la direccion del repositorio remoto
	
	creando alias
		alias aliasName = "comando a ejecutar"

	creando tags 
		git tag -a v# -m "message" idCommit
	ver tags
		git tag
	forma completa
		git show-ref --tags	
